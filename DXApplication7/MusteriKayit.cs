using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.SqlClient;
using DevExpress.XtraEditors.Repository;


namespace DXApplication7
{
    public partial class MusteriKayit : DevExpress.XtraEditors.XtraForm  
    {
        SqlConnection con;
        SqlDataAdapter da;
        SqlCommand cmd;
        DataSet ds;
        public void clear()
        {
            textEdit1.Text = "";
            textEdit2.Text = "";
            textEdit3.Text = "";
            textEdit4.Text = "";
            textEdit5.Text = "";
            richTextBox1.Text = "";
        }
       
        public static string gonderilecekveriad;
        public static string gonderilecekveritc;
        public static string gonderilecekverisoyad;
        public static string gonderilecekveriadres;
        public static string gonderilecekveritel;
        
        

        public MusteriKayit()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource

            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource

            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
     
        }
        public void bilgigetir()
        {
            textEdit1.Text = gridView1.GetFocusedRowCellValue("musteritcno").ToString().Trim();
            textEdit2.Text = gridView1.GetFocusedRowCellValue("musteriad").ToString().Trim();
            textEdit3.Text = gridView1.GetFocusedRowCellValue("musterisoyad").ToString().Trim();

            textEdit4.Text = gridView1.GetFocusedRowCellValue("musteritelno").ToString().Trim();
            textEdit5.Text = gridView1.GetFocusedRowCellValue("musteriid").ToString().Trim();

            richTextBox1.Text = gridView1.GetFocusedRowCellValue("musteriadres").ToString().Trim();
        }


        void griddoldur()
        {
            SqlConnection con = new SqlConnection("server=.; Initial Catalog=Crm; Integrated Security=SSPI");
            da = new SqlDataAdapter("Select *from musteri ", con);
            con.Open();
            ds = new DataSet();
            da.Fill(ds, "musteri");
            gridControl1.DataSource = ds.Tables["musteri"];
            con.Close();

  
         
         } 
        private void simpleButton1_Click(object sender, EventArgs e)
        {
            con = new SqlConnection("server=.; Initial Catalog=Crm;Integrated Security=SSPI");
            cmd = new SqlCommand();

            con.Open();

            cmd.Connection = con;
            cmd.CommandText = "insert into musteri(musteritcno,musteriad,musterisoyad,musteritelno,musteriadres) values ('" +textEdit1.Text + "','" + textEdit2.Text+ "','" + textEdit3.Text + "','" + textEdit4.Text+ "','" +richTextBox1.Text+ "')";

     


            cmd.ExecuteNonQuery();
            con.Close();
           
            griddoldur();
           
            clear();



        }

        private void MusteriKayit_Load(object sender, EventArgs e)
        {
            griddoldur();
            gridView1.OptionsSelection.EnableAppearanceFocusedCell = false;

        }

        private void Sil_Click(object sender, EventArgs e)
        {
            try
            {
                SqlConnection con = new SqlConnection("server=.; Initial Catalog=Crm; Integrated Security=SSPI");
                SqlCommand cmd = new SqlCommand("delete from musteri where musteriid=@id", con);
                string kayitid;

                kayitid=gridView1.GetFocusedRowCellValue("musteriid").ToString();
                cmd.Parameters.AddWithValue("@id", kayitid);

                con.Open(); //Bağlantıyı açtık
                cmd.ExecuteNonQuery();//Geriye değer dönmediği için NonQuery kullanıyoruz.......
                
                griddoldur();

                clear();
                
                con.Close();



            }
            catch
            {
                MessageBox.Show("hata");

            }


        }

        private void Guncelle_Click(object sender, EventArgs e)
        {
           

            SqlConnection con = new SqlConnection("server=.; Initial Catalog=Crm; Integrated Security=SSPI");
            string sorgu = "Update musteri Set musteritcno=@tc ,musteriad=@ad,musterisoyad=@soyad,musteritelno=@telno,musteriadres=@adres where musteriid=@id";
            cmd = new SqlCommand(sorgu, con);
            cmd.Parameters.AddWithValue("@id", textEdit5.Text);
            cmd.Parameters.AddWithValue("@tc",textEdit1.Text);
            cmd.Parameters.AddWithValue("@ad", textEdit2.Text);
            cmd.Parameters.AddWithValue("@soyad", textEdit3.Text);
            cmd.Parameters.AddWithValue("@telno", textEdit4.Text);
            cmd.Parameters.AddWithValue("@adres", richTextBox1.Text);


            con.Open();
            cmd.ExecuteNonQuery();
            griddoldur();
            clear();
            con.Close();
            


            


        }

        private void gridControl1_Click(object sender, EventArgs e)
        {
            bilgigetir();


        }

        private void hyperlinkLabelControl1_Click(object sender, EventArgs e)
        {
            gonderilecekveriad=textEdit2.Text;
            gonderilecekveritc = textEdit1.Text;
            gonderilecekverisoyad = textEdit3.Text;
            gonderilecekveritel = textEdit4.Text;
            gonderilecekveriadres = richTextBox1.Text;

            

            Urunsatisi ur = new Urunsatisi();
       
            ur.Show();
       
         


        }

        private void backgroundWorker1_DoWork(object sender, DoWorkEventArgs e)
        {

        }

        private void hyperlinkLabelControl2_Click(object sender, EventArgs e)
        {
            urunbilgisi urun = new urunbilgisi();
            urun.Show();
        }
    }
}